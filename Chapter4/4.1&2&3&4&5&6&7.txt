4.1 
5 + ((10 * 20) / 2) = 105

4.2
*vec.begin() 
*(vec.begin()) 
*vec.begin()+1 
(*vec.begin())+1 

4.3
可以接受。
C++的设计思想是尽可能地“相信”程序员，将效率最大化。
然而但有潜在的危险，程序员也可能引发错误。

4.4 
A：91

4.5
-30 * 3 + 21 / 5 =-90 + 4 = -86
-30 + 3 * 21 / 5 = -30+63/5 = -30+12 = -18
30 / 3 * 21 % 5 = 10*21%5 = 210%5 = 0
-30 / 3 * 21 % 4  = -10*21 % 4 = -210 % 4 = -2

4.6
A：
if (i % 2 == 0) /* ... */

4.7
//溢出是一种常见的算术运算错误。因为在计算机中存储某种类型的内存空间有限，
//所以该类型的表达能力也是有限的，当计算的结果值超出这个范围时，就会产生未定义的数值，这种错误称为溢出
//假定编译器规定int占32位，则下面的3条表达式都将产生溢出错误
int i = 2999999999 + 1;
int j = -100000 * 300000;
int k = 2021 * 2021 * 2021;
