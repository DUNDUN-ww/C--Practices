4.20
假设iter的类型是vector::iterator, 说明下面的表达式是否合法。如果合法，表达式的含义是什么？如果不合法，错在何处？
(a)*iter++
//合法，后置递增运算符的优先级高于解引用运算符，其含义是解引用当前迭代器所处位置的对象内容，然后把迭代器的位置向后移动一位。
(b)(*iter)++
//非法，解引用iter得到vector对象当前的元素，结果是一个string，显然string没有后置递增操作
(c)*iter.empty()
//非法，解引用运算符的优先级低于点运算符，所以该式先计算iter.empty（）,而迭代器并没有定义empty函数，所以无法通过编译。
(d)iter->empty()
//合法，iter->empty()等价于(*iter).empty().解引用迭代器得到迭代器当前所指的元素，结果是一个string，显然字符串可以判断是否为空，empty函数在此处有效
(e)++*iter
//非法，该式先解引用，得到迭代器当前所指的元素，结果是一个string，显然string没有后置递增操作
(f)iter++->empty()
//合法，iter++->empty()相当于(*iter++).empty().含义是解引用迭代器当前位置的对象内容，得到一个字符串，判断该字符串是否为空，然后把迭代器向后移动一位
 
