5.15
(a) for (int ix = 0; ix != sz; ++ix) { /* ... */ }//ix定义在for语句内部，所以其作用域仅限于for语句。
    if (ix != sz)/在if语句中ix已经失效，因此程序无法编译通过
    	// . . .
(b) int ix;//变量ix未经初始化就直接使用，
    for (ix != sz; ++ix) { /* ... */ }for语句的控制结构缺少;
(c) for (int ix = 0; ix != sz; ++ix, ++sz) { /*...*/ }
//ix和sz同步增长，循环的终止条件不会满足，所以该循环是一个死循环


5.16
char ch；
while (cin >> ch)
{
	/*....*/
}

for (; cin >> ch; )//事实上不太要求我们严格跟踪循环变量的变化过程，改写成for循环后稍显冗余
{
	/*...*/
}
//上面for循环控制结构中，第一条语句和第三条语句都是空语句，额外添加一个循环控制变量（比如int i）是没有意义的

//整数累加求和的程序一般使用for循环，其形式是：
int icount = 0;
for (int i = 0; i < 10; ++i)
{
	icout += i;
}

//使用while循环的形式是：
int icount = 0，i = 0；
while (i < 10)
{
	icount += i;
	++i;
}
//在大多数情况下，两种循环可以相互转换








