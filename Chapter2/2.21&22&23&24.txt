2.21
int i = 0;
(a) double* dp = &i;//非法,dp是double类型的指针，而i是int型变量，类型不匹配
(b) int *ip = i;    //非法，不能把int变量赋给int指针，应先取地址&i然后将地址赋给ip
(c) int *p = &i;    //合法

2.22
if (p) // 检验指针所指的地址值
if (*p) //检验指针所指的对象内容


2.23
给定指针p,你能知道它是否指向了一个合法的对象吗?如果能，叙述判断的思路;如果不能，也请说明原因。
 A:应该尽量初始化所有指针，并且尽可能等定义了对象之后再定义指向它的指针。
如果实在不清楚指针应该指向何处，就把它初始化为nullptr或者0。在此前提下，判断p是否指向合法对象，只需把p作为if语句的条件即可，如果p的值是nullptr，则条件为假；反之，条件为真。
   如果不注意初始化所有指针而贸然判断指针的值，则有可能引发不可预知的结果。一种处理方
发是把if（p）置于try结构中，当程序块顺利执行，表示p指向了合法的对象；当程序块出错跳转
到catch语句中，表示p没有指向合法的对象。

2.24 为什么合法
int i = 42;
void *p = &i;   //因为void*是一种特殊的指针类型，可以存放任意对象的地址  
long *lp = &i;  //lp是一个长整型指针，而i只是一个普通整型数，二者类型不匹配
