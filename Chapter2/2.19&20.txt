2.19 说明指针和引用的主要区别
指针“指向”内存中的某个对象，而引用“绑定到”内存中的某个对象，它们都实现了对其他对象的间接访问，二者的区别主要有两个方面：
第一，指针本身就是一个对象，允许对指针赋值和拷贝，而且在指针的声明周期内它可以指向几个不同的对象；引用不是一个对象，无法令引用重新绑定到另外一个对象。
第二，指针无需在定义时赋初值，和其他内置类型一样，在块作用域内定义的指针如果没有被初始化，也将拥有一个不确定的值；引用则必须在定义时赋初值。

2.20
int i = 42;
int *p1 = &i; 
*p1 = *p1 * *p1;
作用

这段代码首先定义了一个整型变量 i 并设其初值为 42；
接着定义了一个整型指针 p1，令其指向变量 i；最后取出 p1 所指的当前值，计算平方后重新赋给 p1 所指的变量 i，即 42 * 42 (1764)。
第二行的 * 表示声明一个指针，第三行的 * 表示解引用运算，即取出指针 p1 所指对象的值。
