2.30
//顶层：指针本身是个常量，也可以表示任意的对象是常量
//底层：指针所指的对象是一个常量
const int v2 = 0;  //v2 顶层const，表示一个整型常量
int v1 = v2;          
int *p1 = &v1, &r1 = v1;                
const int *p2 = &v2, *const p3 = &i, &r2 = v2; 
 //p3是顶层const，一个整型常量指针
 //p2和r2是底层const，分别表示它们所指的（所引用）的对象是常量

2.31
rl = v2; //合法，r1非常量引用，v2是常量（顶层），把v2的值拷贝给r1不会有影响
p1 = p2; //不合法，p1是普通指针，指向对象可以是任意值，p2常量指针（底层），令p1指向p2，有可能错误改变常量的值
p2 = p1; //合法，p2可以指向非常量，但是不能通过p2更改p1的值
p1 = p3; //不合法，p3因为指向的对象是常量，因此包含底层const，不能把p3赋给普通指针
p2 = p3; //合法，p2和p3有相同的底层const，p3的顶层const没有什么影响
       
 
